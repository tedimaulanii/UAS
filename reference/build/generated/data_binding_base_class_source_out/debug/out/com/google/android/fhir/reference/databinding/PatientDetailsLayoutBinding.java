// Generated by view binder compiler. Do not edit!
package com.google.android.fhir.reference.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.fhir.reference.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientDetailsLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView city;

  @NonNull
  public final TextView country;

  @NonNull
  public final TextView dob;

  @NonNull
  public final TextView gender;

  @NonNull
  public final TextView isActive;

  @NonNull
  public final TextView patientCity;

  @NonNull
  public final TextView patientCountry;

  @NonNull
  public final TextView patientDob;

  @NonNull
  public final TextView patientGender;

  @NonNull
  public final TextView patientIsActive;

  @NonNull
  public final TextView patientPhoneNumber;

  @NonNull
  public final TextView phoneNumber;

  @NonNull
  public final TextView title;

  private PatientDetailsLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView city,
      @NonNull TextView country, @NonNull TextView dob, @NonNull TextView gender,
      @NonNull TextView isActive, @NonNull TextView patientCity, @NonNull TextView patientCountry,
      @NonNull TextView patientDob, @NonNull TextView patientGender,
      @NonNull TextView patientIsActive, @NonNull TextView patientPhoneNumber,
      @NonNull TextView phoneNumber, @NonNull TextView title) {
    this.rootView = rootView;
    this.city = city;
    this.country = country;
    this.dob = dob;
    this.gender = gender;
    this.isActive = isActive;
    this.patientCity = patientCity;
    this.patientCountry = patientCountry;
    this.patientDob = patientDob;
    this.patientGender = patientGender;
    this.patientIsActive = patientIsActive;
    this.patientPhoneNumber = patientPhoneNumber;
    this.phoneNumber = phoneNumber;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientDetailsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientDetailsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_details_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientDetailsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city;
      TextView city = rootView.findViewById(id);
      if (city == null) {
        break missingId;
      }

      id = R.id.country;
      TextView country = rootView.findViewById(id);
      if (country == null) {
        break missingId;
      }

      id = R.id.dob;
      TextView dob = rootView.findViewById(id);
      if (dob == null) {
        break missingId;
      }

      id = R.id.gender;
      TextView gender = rootView.findViewById(id);
      if (gender == null) {
        break missingId;
      }

      id = R.id.is_active;
      TextView isActive = rootView.findViewById(id);
      if (isActive == null) {
        break missingId;
      }

      id = R.id.patient_city;
      TextView patientCity = rootView.findViewById(id);
      if (patientCity == null) {
        break missingId;
      }

      id = R.id.patient_country;
      TextView patientCountry = rootView.findViewById(id);
      if (patientCountry == null) {
        break missingId;
      }

      id = R.id.patient_dob;
      TextView patientDob = rootView.findViewById(id);
      if (patientDob == null) {
        break missingId;
      }

      id = R.id.patient_gender;
      TextView patientGender = rootView.findViewById(id);
      if (patientGender == null) {
        break missingId;
      }

      id = R.id.patient_is_active;
      TextView patientIsActive = rootView.findViewById(id);
      if (patientIsActive == null) {
        break missingId;
      }

      id = R.id.patient_phone_number;
      TextView patientPhoneNumber = rootView.findViewById(id);
      if (patientPhoneNumber == null) {
        break missingId;
      }

      id = R.id.phone_number;
      TextView phoneNumber = rootView.findViewById(id);
      if (phoneNumber == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new PatientDetailsLayoutBinding((RelativeLayout) rootView, city, country, dob, gender,
          isActive, patientCity, patientCountry, patientDob, patientGender, patientIsActive,
          patientPhoneNumber, phoneNumber, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
