// Generated by view binder compiler. Do not edit!
package com.google.android.fhir.reference.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import com.google.android.fhir.reference.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final ObservationListViewBinding observationList;

  @NonNull
  public final TextView patientDetail;

  @NonNull
  public final MaterialCardView patientInfoCard;

  @NonNull
  public final PatientDetailsLayoutBinding patientListItem;

  private PatientDetailBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull ObservationListViewBinding observationList, @NonNull TextView patientDetail,
      @NonNull MaterialCardView patientInfoCard,
      @NonNull PatientDetailsLayoutBinding patientListItem) {
    this.rootView = rootView;
    this.observationList = observationList;
    this.patientDetail = patientDetail;
    this.patientInfoCard = patientInfoCard;
    this.patientListItem = patientListItem;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.observation_list;
      View observationList = rootView.findViewById(id);
      if (observationList == null) {
        break missingId;
      }
      ObservationListViewBinding binding_observationList = ObservationListViewBinding.bind(observationList);

      id = R.id.patient_detail;
      TextView patientDetail = rootView.findViewById(id);
      if (patientDetail == null) {
        break missingId;
      }

      id = R.id.patient_info_card;
      MaterialCardView patientInfoCard = rootView.findViewById(id);
      if (patientInfoCard == null) {
        break missingId;
      }

      id = R.id.patient_list_item;
      View patientListItem = rootView.findViewById(id);
      if (patientListItem == null) {
        break missingId;
      }
      PatientDetailsLayoutBinding binding_patientListItem = PatientDetailsLayoutBinding.bind(patientListItem);

      return new PatientDetailBinding((LinearLayoutCompat) rootView, binding_observationList,
          patientDetail, patientInfoCard, binding_patientListItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
